/**
 * ReaScript Name: Display selected track pan compensated by width
 * Description: Display selected track pan multiplied by width
 * Author: X-Raym
 * Author URl: http://extremraym.com
 * Repository: GitHub > X-Raym > EEL Scripts for Cockos REAPER
 * Repository URl: https://github.com/X-Raym/REAPER-EEL-Scripts
 * File URl: https://github.com/X-Raym/REAPER-EEL-Scripts/scriptName.eel
 * Licence: GPL v3
 * Forum Thread: Script: Script: Display selected track pan compensated by width
 * Forum Thread URl:
 * Version: 0.9
 * Version Date: 2015-02-18
 * REAPER: 4.76
 * Extensions: None
 */
 
/**
 * Changelog:
 * v1.0 (2015-02-18)
	+ Initial Release
 */

// ----- DEBUGGING ====>
//@import X-Raym_Functions - console debug messages.eel

debug = 0; // 0 => No console. 1 => Display console messages for debugging.
clean = 0; // 0 => No console cleaning before every script execution. 1 => Console cleaning before every script execution.

msg_clean();
// <==== DEBUGGING -----

// FROM SPK77 CLOCK.EEL
// Initial values
font_size = 40;
font_name = "Arial";
window_w = 300;
window_h = 50;

function adjust_font_size(mouse_wheel_val)
(
	mouse_wheel_val > 0 ? (
	font_size < 80 ? (
	 	font_size += 4;
		);
	);
	mouse_wheel_val < 0 ? (
	(font_size > 16 ) ? (
		font_size -= 4;
		);
	);
	gfx_setfont(1, font_name, font_size);
	mouse_wheel = 0;
);

function init(window_w, window_h)
(
	gfx_init("Pan compensated by with" , window_w, window_h);
	gfx_setfont(1, font_name, font_size, 'b');
	gfx_a = 1; gfx_r = 1; gfx_g = 1; gfx_b = 1;
);

// THE FUNCITON
function main() local (track)
(
	// GET TRACKS INFOS

	// DUE TO GFX WINDOW LIMITATION, JUST GET FIRST SELECTED TRACK
	selected_tracks_count = CountSelectedTracks(0);

	track = GetSelectedTrack(0, 0);

	pan_initial = GetMediaTrackInfo_Value(track, "D_PAN");
	width = GetMediaTrackInfo_Value(track, "D_WIDTH");
	
	pan_output = (pan_initial * width)*100;
	
	GetSetMediaTrackInfo_String(track, "P_NAME", #stringNeedBig, 0);
	name = #stringNeedBig;

	number = GetMediaTrackInfo_Value(track, "IP_TRACKNUMBER");

	/*
	msg_tvold("Track name:", name, "%s", 0, 1);
	msg_tvold("Track index:", number, "%d", 0, 1);
	msg_tvold("Track pan:", pan_initial*100, "%d", 0, debug);
	msg_tvold("Track width:", width*100, "%d", 0, debug);
	msg_tvold("Compensated pan:", pan_output, "%d", 1, 1);
	*/

	// DISPLAYS INFO (from spk77 CLOCK.EEL)
	mouse_wheel != 0 ? adjust_font_size(mouse_wheel);

	mouse_state == 0 && mouse_cap == 2 && mouse_x > 5 && mouse_x < gfx_w - 5 && mouse_y > 5 && mouse_y < gfx_h - 5 ? (
		mouse_state = 1;
	);

	mouse_cap == 0 ? mouse_state = 0;

	gfx_x = 0.5*(gfx_w-str_w);
	gfx_y = 5;
	gfx_printf(name);
	// THEN PRINT TRACK ID
	// THEN PRINT PAN
	// THEN PRINT WIDTH
	// THEN PRINT PAN COMPENSATED BY WITH

	gfx_update();
	gfx_getchar() >= 0 ? defer("main();");
			
);

// START
function msg_start()
(
	debug === 1 ? (
		ShowConsoleMsg("▼▼▼▼▼");
		ShowConsoleMsg("\n");
	);
);

// End
function msg_end()
(
	debug === 1 ? (
		ShowConsoleMsg("▲▲▲▲▲");
		ShowConsoleMsg("\n"); // In case of clean = 0;
	);
);

// Clean
function msg_clean()
(	
	//debug === 1 ? (
		clean === 1 ? (
			ShowConsoleMsg("");
		);
	//);
);


msg_start(); // Display characters in the console to show you the begining of the script execution.

init(window_w, window_h); // INITIALIZE THE WINDOW

main(); // Execute your main function

UpdateArrange(); // Update the arrangement (often needed)

msg_end(); // Display characters in the console to show you the end of the script execution.

