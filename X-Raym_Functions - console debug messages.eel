// Show console messages
// EEL Script for Reaper
// Author : spk77 & X-Raym
// Source : GitHub > X-Raym > EEL Scripts for Cockos REAPER
// Source URl : https://github.com/X-Raym/REAPER-EEL-Scripts
// Licence : GPL v3
// Release Date : 12-01-2015

// Version : 1.3
// Version Date : 21-01-2015
// Required : Reaper 4.76

// From : "name" variable in RPR_EnumProjectMarkers3 - Cockos Confederated Forums
// http://forum.cockos.com/showthread.php?t=136047

// X-Raym contribution for conditional debugging
// Add this at the begining of your script file (without the //):

// ----- DEBUGGING ====>
//@import X-Raym_Functions - console debug messages.eel

//debug = 0; // 0 => No console. 1 => Display console messages for debugging.
//clean = 0; // 0 => No console cleaning before every script execution. 1 => Console cleaning before every script execution.

//msg_clean();
// <==== DEBUGGING -----

// Strings
function msg_s(variable)
(
	debug === 1 ? (
		strlen(variable) > 0 ? (
			ShowConsoleMsg(variable);
			ShowConsoleMsg("\n");
		) : (
			ShowConsoleMsg("ERROR : Empty String");
			ShowConsoleMsg("\n");
		);
	);
);

// Strings with text and lines
function msg_stl(text,variable,line)
(
	debug === 1 ? (
		strlen(text) > 0 ? (
			msg_s(text);
		);
		strlen(variable) > 0 ? (
			ShowConsoleMsg(variable);
			ShowConsoleMsg("\n");
		) : (
			ShowConsoleMsg("ERROR : Empty String");
			ShowConsoleMsg("\n");
		);
		line === 0 ?(
			ShowConsoleMsg("\n");
			):(
				ShowConsoleMsg("\n-----\n");
		);
	);
);

// Double
function msg_d(variable)
(
	debug === 1 ? (
		sprintf(str, "%d", variable);
		ShowConsoleMsg(str);
		ShowConsoleMsg("\n");
	);
);

// Double with text and lines
function msg_dtl(text,variable,line)
(
	debug === 1 ? (
		strlen(text) > 0 ? (
			msg_s(text);
		);
		sprintf(str, "%d", variable);
		ShowConsoleMsg(str);
		line === 0 ?(
			ShowConsoleMsg("\n");
			):(
				ShowConsoleMsg("\n-----\n");
		);
	);
);

// Float
function msg_f(variable)
(
	debug === 1 ? (
		sprintf(str, "%f", variable);
		ShowConsoleMsg(str);
		ShowConsoleMsg("\n");
	);
);

// Float with text and lines
function msg_ftl(text,variable,line)
(
	debug === 1 ? (
		strlen(text) > 0 ? (
			msg_s(text);
		);
		sprintf(str, "%f", variable);
		ShowConsoleMsg(str);
		line === 0 ?(
			ShowConsoleMsg("\n");
			):(
				ShowConsoleMsg("\n-----\n");
		);
	);
);


// Clean
function msg_clean()
(	
	debug === 1 ? (
		clean === 1 ? (
			ShowConsoleMsg("");
		);
	);
);

// Start
function msg_start()
(
	debug === 1 ? (
		ShowConsoleMsg("▼▼▼▼▼");
		ShowConsoleMsg("\n-----\n");
	);
);

// End
function msg_end()
(
	debug === 1 ? (
		ShowConsoleMsg("▲▲▲▲▲");
		ShowConsoleMsg("\n");
	);
);


// End

// Debug
/*function main()(
	debug = 1;
	clean = 1;
	msg_clean();
	msg_s("sddsd");
);

main();*/
