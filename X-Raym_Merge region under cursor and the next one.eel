// Merge region under cursor and the next one
// EEL Script for Reaper
// Author : X-Raym
// Author URl : http://extremraym.com
// Source : GitHub > X-Raym > EEL Scripts for Cockos REAPER
// Source URl : https://github.com/X-Raym/REAPER-EEL-Scripts
// Licence : GPL v3
// Release Date : 03-01-2015

// Version : 1.1
// Version Date : 19-01-2015
// Required : Reaper 4.76

// ----- DEBUGGING ====>
@import X-Raym_Functions - console debug messages.eel

debug = 1; // 0 => No console. 1 => Display console messages for debugging.
clean = 0; // 0 => No console cleaning before every script execution. 1 => Console cleaning before every script execution.

msg_clean();
// <=== DEBUGGING -----

function merge_two_regions()
(
	msg_s("=====>");
	msg_s("INSTRUCTIONS : Be sure to have the cursor inside a region.\nYou can edit the consecutive threshold in the .eel file !");
	msg_s("BEWARE : If you have regions subtitles, you will have to re-generate them!");
	msg_s("-----");

	consecutive_threshold = 1; // You can edit this ! The value is in seconds.
	msg_s("Threshold (in seconds):");
	msg_f(consecutive_threshold);
	msg_s("-----");
		
	CursorPosition_d = GetCursorPosition();

	msg_s("Cursor Position:");
	msg_f(CursorPosition_d);
	msg_s("-----");

	i = 0;

	while (EnumProjectMarkers(i, isRegion_b, RegionStart_d, RegionEnd_d, #name_str, markrgnIndexNumber_int) ) (

		region_end_previous_threshold = currentRegionEnd_d + consecutive_threshold;

		isRegion_b && RegionStart_d > CursorPosition_d && region_end_previous_threshold >= RegionStart_d ? (
			
			region_name = #name_str;
			region_name_string = sprintf(#dest3, "%s", region_name);

			msg_s("Regions start:");
			msg_f(RegionStart_d);
			msg_s("Regions end:");
			msg_f(RegionEnd_d);
			msg_s("Regions ID:");
			msg_d(markrgnIndexNumber_int);
			msg_s("Regions name:");
			msg(region_name);
			msg_s("-----");

			separator = " ";

			merged_name = sprintf(#dest, "%s%s%s", currentRegionName_str, separator, region_name_string);

			msg_s("Merged name:");
			msg(merged_name);
			msg_s("-----");

			SetProjectMarker(currentRegionID_int, 1, currentRegionStart_d, RegionEnd_d, merged_name);

			msg_s("Deleted region ID:");
			msg_d(markrgnIndexNumber_int);
			msg_s("-----");

			DeleteProjectMarker(NULL, markrgnIndexNumber_int, 1);

			msg_s("Regions merged IDs:");
			msg_d(currentRegionID_int);
			msg_s("and:");
			msg_d(markrgnIndexNumber_int);
			msg_s("<=====\n");

			regions_merged = 1;
			
		):(
			i < 1 ? (
			
				currentRegionStart_d = RegionStart_d;
				currentRegionEnd_d = RegionEnd_d;
				currentRegionName_c = #name_str;
				currentRegionName_str = sprintf(#dest2, "%s", currentRegionName_c);
				currentRegionID_int = markrgnIndexNumber_int;

				msg_s("Current Regions start:");
				msg_f(currentRegionStart_d);
				msg_s("Current Regions end:");
				msg_f(currentRegionEnd_d);
				msg_s("Current Regions ID:");
				msg_d(currentRegionID_int);
				msg_s("Current Regions name:");
				msg(currentRegionName_str);
				msg_s("-----");
			);
		);

		i += 1;
	);
	
	regions_merged = 0 ? (

		msg_s("No regions merged.");
		msg("<=====\n");

	);
);

merge_two_regions();