/**
 * ReaScript Name: Display track pan compensated by width
 * Description: Display selected track pan multiplied by width
 * Author: X-Raym
 * Author URl: http://extremraym.com
 * Repository: GitHub > X-Raym > EEL Scripts for Cockos REAPER
 * Repository URl: https://github.com/X-Raym/REAPER-EEL-Scripts
 * File URl: https://github.com/X-Raym/REAPER-EEL-Scripts/scriptName.eel
 * Licence: GPL v3
 * Forum Thread: Script: Script: Display track pan compensated by width
 * Forum Thread URl:
 * Version: 1.0
 * Version Date: 2015-02-18
 * REAPER: 4.76
 * Extensions: None
 */
 
/**
 * Changelog:
 * v1.0 (2015-02-18)
	+ Initial Release
 */

// ----- DEBUGGING ====>
@import X-Raym_Functions - console debug messages.eel

debug = 1; // 0 => No console. 1 => Display console messages for debugging.
clean = 1; // 0 => No console cleaning before every script execution. 1 => Console cleaning before every script execution.

msg_clean();
// <==== DEBUGGING -----

function main() local (i, track)
(
	// LOOP TRHOUGH SELECTED TRACKS
	
	selected_tracks_count = CountSelectedTracks(0);

	i = 0; // INITIALIZE loop through selected tracks
	loop(selected_tracks_count, (track = GetSelectedTrack(0, i)) ? (
			pan_initial = GetMediaTrackInfo_Value(track, "D_PAN");
			width = GetMediaTrackInfo_Value(track, "D_WIDTH");
			
			pan_output = (pan_initial * width)*100;
			
			GetSetMediaTrackInfo_String(track, "P_NAME", #stringNeedBig, 0);
			name = #stringNeedBig;

			number = GetMediaTrackInfo_Value(track, "IP_TRACKNUMBER");

			msg_tvold("Track name:", name, "%s", 0, 1);
			msg_tvold("Track index:", number, "%d", 0, 1);
			msg_tvold("Track pan:", pan_initial*100, "%d", 0, debug);
			msg_tvold("Track width:", width*100, "%d", 0, debug);
			msg_tvold("Compensated pan:", pan_output, "%d", 1, 1); 
			
		); // ENDIF inside loop
		i += 1; // INCREMENT loop through selected tracks
	); // ENDLOOP through selected tracks
);

msg_start(); // Display characters in the console to show you the begining of the script execution.

main(); // Execute your main function

UpdateArrange(); // Update the arrangement (often needed)

msg_end(); // Display characters in the console to show you the end of the script execution.
