// Set selected tracks and takes color from HEX value.eel
// EEL Script for Reaper
// Author: X-Raym
// Author URl: http://extremraym.com
// Source: GitHub > X-Raym > EEL Scripts for Cockos REAPER
// Source URl: https://github.com/X-Raym/REAPER-EEL-Scripts
// Licence: GPL v3
// Release Date: 11-02-2015
// Forum Thread: EEL : Set color hex value for selected tracks and takes
// Forum Thread URl: http://forum.cockos.com/

// Version: 1.0
// Version Date: 15-02-2015
// Required: Reaper 4.76

// ----- DEBUGGING ====>
@import ../Functions/X-Raym_Functions - console debug messages.eel

debug = 1; // 0 => No console. 1 => Display console messages for debugging.
clean = 1; // 0 => No console cleaning before every script execution. 1 => Console cleaning before every script execution.

msg_clean();
// <==== DEBUGGING -----


function main() local (i, j)
(

	Undo_BeginBlock();

	// YOUR CODE BELOW

	color_int = (R + 256 * G + 65536 * B)|16777216;

	countItems = CountSelectedMediaItems(0);

	// SELECTED ITEMS LOOP
	i = 0;
	loop(countItems,
		(item = GetSelectedMediaItem(0, i)) ? (
			(take = GetActiveTake(item)) ? (
					SetMediaItemTakeInfo_Value(take, "I_CUSTOMCOLOR", color_int);
				);
			);
		i += 1;
	);

	countTracks = CountSelectedTracks(0);

	// SELECTED TRACKS LOOP
	j = 0;
	loop(countTracks, 
			(track = GetSelectedTrack(0, j)) ? (
				SetMediaTrackInfo_Value(track, "I_CUSTOMCOLOR", color_int);
			);
		j += 1;
	);

	Undo_EndBlock("Set color hex value for selected tracks and takes", 0);
);

function dialog()
(
  #dialog_ret_vals = "123456"; //default values
  GetUserInputs("Parameters", 1, "Hex color (without #)", #dialog_ret_vals);
);

function userInput()
(
	dialog() ? (
		// convert first and second values to int and store to "input1_val", "input2_val"
		match("%d,%d", #dialog_ret_vals, color_hex_input);
		msg_d(color_hex_input); // print int value
	);
);

msg_start(); // Display characters in the console to show you the begining of the script execution.

userInput();

main(); // Execute your main function

UpdateArrange(); // Update the arrangement (often needed)

msg_end(); // Display characters in the console to show you the end of the script execution.
